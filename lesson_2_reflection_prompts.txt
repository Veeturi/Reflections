What happens when you initialize a repository? Why do you need to do it?
	When we initialize a repository, a hidden git folder is created which keeps track of different files in our directory. Furthermore, it asks us to specify which files we would like yo track. We need to initialize it so that we may track our files and versions of our code.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is where the files are temporarily kept before a commit. If there are 4-5 different codes and each has it's own set of functions, it may not be necessary to commit all the sub-routines in each commit. Hence, in the staging area, you may choose which files to commit. Working directory consists of all the files in that directory including other sub-directories and other format files. Repository contains other commits as well i.e. previous versions whereas staging area only consists of files from the latest version of code.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?